/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <BitmapDatabase.hpp>

Screen2ViewBase::Screen2ViewBase() :
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    flexDownDuty.setBoxWithBorderPosition(0, 0, 50, 50);
    flexDownDuty.setBorderSize(5);
    flexDownDuty.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexDownDuty.setPosition(403, 212, 50, 50);
    flexDownDuty.setAction(flexButtonCallback);

    flexUpDuty.setBoxWithBorderPosition(0, 0, 50, 50);
    flexUpDuty.setBorderSize(5);
    flexUpDuty.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexUpDuty.setPosition(403, 140, 50, 50);
    flexUpDuty.setAction(flexButtonCallback);

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    flexButton1.setBoxWithBorderPosition(0, 0, 124, 27);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(1, 68, 135), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setPosition(343, 9, 124, 27);
    flexButton1.setAction(flexButtonCallback);

    textArea1.setXY(360, 13);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OWHL));

    testVal1.setXY(12, 200);
    testVal1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    testVal1.setLinespacing(0);
    Unicode::snprintf(testVal1Buffer, TESTVAL1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AK80).getText());
    testVal1.setWildcard(testVal1Buffer);
    testVal1.resizeToCurrentText();
    testVal1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VFFK));

    testVal2.setXY(12, 237);
    testVal2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    testVal2.setLinespacing(0);
    Unicode::snprintf(testVal2Buffer, TESTVAL2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_28ND).getText());
    testVal2.setWildcard(testVal2Buffer);
    testVal2.resizeToCurrentText();
    testVal2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FPPC));

    upDutyImg.setBitmap(touchgfx::Bitmap(BITMAP_UP_ARROW_ID));
    upDutyImg.setPosition(403, 140, 50, 50);
    upDutyImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    downDutyImg.setBitmap(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID));
    downDutyImg.setPosition(403, 212, 50, 50);
    downDutyImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    textArea2.setXY(289, 185);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LHPL).getText());
    textArea2.setWildcard(textArea2Buffer);
    textArea2.resizeToCurrentText();
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6V2X));

    textArea4.setXY(0, 0);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ICN1));

    textArea3.setXY(0, 24);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CCVH).getText());
    textArea3.setWildcard(textArea3Buffer);
    textArea3.resizeToCurrentText();
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZP6C));

    textArea5.setXY(0, 48);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea5.setLinespacing(0);
    Unicode::snprintf(textArea5Buffer, TEXTAREA5_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GQBS).getText());
    textArea5.setWildcard(textArea5Buffer);
    textArea5.resizeToCurrentText();
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V666));

    textArea6.setXY(0, 72);
    textArea6.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea6.setLinespacing(0);
    Unicode::snprintf(textArea6Buffer, TEXTAREA6_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OLGI).getText());
    textArea6.setWildcard(textArea6Buffer);
    textArea6.resizeToCurrentText();
    textArea6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_22DJ));

    textArea7.setXY(0, 96);
    textArea7.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea7.setLinespacing(0);
    Unicode::snprintf(textArea7Buffer, TEXTAREA7_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XXO3).getText());
    textArea7.setWildcard(textArea7Buffer);
    textArea7.resizeToCurrentText();
    textArea7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9ZJK));

    add(__background);
    add(flexDownDuty);
    add(flexUpDuty);
    add(box1);
    add(flexButton1);
    add(textArea1);
    add(testVal1);
    add(testVal2);
    add(upDutyImg);
    add(downDutyImg);
    add(textArea2);
    add(textArea4);
    add(textArea3);
    add(textArea5);
    add(textArea6);
    add(textArea7);
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexDownDuty)
    {
        //Interaction2
        //When flexDownDuty clicked call virtual function
        //Call decrementDuty
        decrementDuty();
    }
    else if (&src == &flexUpDuty)
    {
        //Interaction3
        //When flexUpDuty clicked call virtual function
        //Call incrementDuty
        incrementDuty();
    }
    else if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenSlideTransitionWest();
    }
}
