/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


Screen1ViewBase::Screen1ViewBase() :
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    flexDownTemp.setBoxWithBorderPosition(0, 0, 50, 50);
    flexDownTemp.setBorderSize(5);
    flexDownTemp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexDownTemp.setPosition(248, 222, 50, 50);
    flexDownTemp.setAction(flexButtonCallback);

    flexUpTemp.setBoxWithBorderPosition(0, 0, 50, 50);
    flexUpTemp.setBorderSize(5);
    flexUpTemp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexUpTemp.setPosition(248, 150, 50, 50);
    flexUpTemp.setAction(flexButtonCallback);

    flexUpFlow.setBoxWithBorderPosition(0, 0, 50, 50);
    flexUpFlow.setBorderSize(5);
    flexUpFlow.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexUpFlow.setPosition(345, 150, 50, 50);
    flexUpFlow.setAction(flexButtonCallback);

    flexDownFlow.setBoxWithBorderPosition(0, 0, 50, 50);
    flexDownFlow.setBorderSize(5);
    flexDownFlow.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexDownFlow.setPosition(345, 222, 50, 50);
    flexDownFlow.setAction(flexButtonCallback);

    background.setPosition(0, 0, 480, 272);
    background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    upTempImg.setBitmap(touchgfx::Bitmap(BITMAP_UP_ARROW_ID));
    upTempImg.setPosition(248, 150, 50, 50);
    upTempImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    downTempImg.setBitmap(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID));
    downTempImg.setPosition(248, 222, 50, 50);
    downTempImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    upFlowImg.setBitmap(touchgfx::Bitmap(BITMAP_UP_ARROW_ID));
    upFlowImg.setPosition(345, 150, 50, 50);
    upFlowImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    downFlowImg.setBitmap(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID));
    downFlowImg.setPosition(345, 222, 50, 50);
    downFlowImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    graphFlow.setScale(1000);
    graphFlow.setPosition(0, 0, 480, 136);
    graphFlow.setGraphAreaMargin(5, 25, 25, 5);
    graphFlow.setGraphAreaPadding(0, 0, 0, 0);
    graphFlow.setGraphRangeY(0, 10);

    graphFlowMajorYAxisLabel.setScale(1000);
    graphFlowMajorYAxisLabel.setInterval(2);
    graphFlowMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_YKV5));
    graphFlowMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graphFlow.addRightElement(graphFlowMajorYAxisLabel);

    graphFlowLine1Painter.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graphFlowLine1.setPainter(graphFlowLine1Painter);
    graphFlowLine1.setLineWidth(2);
    graphFlow.addGraphElement(graphFlowLine1);

    graphTemp.setScale(10);
    graphTemp.setPosition(0, 0, 480, 136);
    graphTemp.setGraphAreaMargin(5, 25, 25, 5);
    graphTemp.setGraphAreaPadding(2, 0, 0, 0);
    graphTemp.setGraphRangeY(0, 100);

    graphTempMajorYAxisGrid.setScale(10);
    graphTempMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(61, 65, 66));
    graphTempMajorYAxisGrid.setInterval(20);
    graphTempMajorYAxisGrid.setLineWidth(1);
    graphTemp.addGraphElement(graphTempMajorYAxisGrid);

    graphTempMajorYAxisLabel.setScale(10);
    graphTempMajorYAxisLabel.setInterval(20);
    graphTempMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_5P8J));
    graphTempMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(196, 30, 22));
    graphTemp.addLeftElement(graphTempMajorYAxisLabel);

    graphTempLine1Painter.setColor(touchgfx::Color::getColorFromRGB(196, 30, 22));
    graphTempLine1.setPainter(graphTempLine1Painter);
    graphTempLine1.setLineWidth(2);
    graphTemp.addGraphElement(graphTempLine1);

    labelTemp.setXY(2, 138);
    labelTemp.setColor(touchgfx::Color::getColorFromRGB(196, 30, 22));
    labelTemp.setLinespacing(0);
    labelTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZBMR));

    labelFlow.setXY(446, 138);
    labelFlow.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    labelFlow.setLinespacing(0);
    labelFlow.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RHSD));

    nowTemp.setXY(0, 163);
    nowTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nowTemp.setLinespacing(0);
    Unicode::snprintf(nowTempBuffer, NOWTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XLJG).getText());
    nowTemp.setWildcard(nowTempBuffer);
    nowTemp.resizeToCurrentText();
    nowTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VQ8W));

    nowFlow.setXY(0, 189);
    nowFlow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nowFlow.setLinespacing(0);
    Unicode::snprintf(nowFlowBuffer, NOWFLOW_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_U8YI).getText());
    nowFlow.setWildcard(nowFlowBuffer);
    nowFlow.resizeToCurrentText();
    nowFlow.setTypedText(touchgfx::TypedText(T___SINGLEUSE_81ZS));

    nowVol.setXY(2, 213);
    nowVol.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nowVol.setLinespacing(0);
    Unicode::snprintf(nowVolBuffer, NOWVOL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EMSI).getText());
    nowVol.setWildcard(nowVolBuffer);
    nowVol.resizeToCurrentText();
    nowVol.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XTYX));

    SPTemp.setXY(244, 198);
    SPTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    SPTemp.setLinespacing(0);
    Unicode::snprintf(SPTempBuffer, SPTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MXIN).getText());
    SPTemp.setWildcard(SPTempBuffer);
    SPTemp.resizeToCurrentText();
    SPTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQNO));

    SPFlow.setXY(338, 195);
    SPFlow.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    SPFlow.setLinespacing(0);
    Unicode::snprintf(SPFlowBuffer, SPFLOW_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YF1J).getText());
    SPFlow.setWildcard(SPFlowBuffer);
    SPFlow.resizeToCurrentText();
    SPFlow.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U15I));

    textAreaSP.setXY(298, 151);
    textAreaSP.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaSP.setLinespacing(0);
    textAreaSP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_19KW));

    flexButton1.setBoxWithBorderPosition(0, 0, 124, 27);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(1, 68, 135), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setPosition(24, 239, 124, 27);
    flexButton1.setAction(flexButtonCallback);

    textArea1.setXY(35, 243);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1BLF));

    circleProgress.setXY(419, 212);
    circleProgress.setProgressIndicatorPosition(0, 0, 54, 54);
    circleProgress.setRange(0, 100);
    circleProgress.setCenter(27, 27);
    circleProgress.setRadius(25);
    circleProgress.setLineWidth(0);
    circleProgress.setStartEndAngle(0, 360);
    circleProgress.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_CIRCLE_INDICATOR_BG_FULL_ID));
    circleProgressPainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_SMALL_CIRCLE_INDICATOR_FILL_FULL_ID));
    circleProgress.setPainter(circleProgressPainter);
    circleProgress.setValue(60);

    add(__background);
    add(flexDownTemp);
    add(flexUpTemp);
    add(flexUpFlow);
    add(flexDownFlow);
    add(background);
    add(upTempImg);
    add(downTempImg);
    add(upFlowImg);
    add(downFlowImg);
    add(graphFlow);
    add(graphTemp);
    add(labelTemp);
    add(labelFlow);
    add(nowTemp);
    add(nowFlow);
    add(nowVol);
    add(SPTemp);
    add(SPFlow);
    add(textAreaSP);
    add(flexButton1);
    add(textArea1);
    add(circleProgress);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexDownTemp)
    {
        //Interaction2
        //When flexDownTemp clicked call virtual function
        //Call decrementTemp
        decrementTemp();
    }
    else if (&src == &flexUpTemp)
    {
        //Interaction1
        //When flexUpTemp clicked call virtual function
        //Call incrementTemp
        incrementTemp();
    }
    else if (&src == &flexUpFlow)
    {
        //Interaction4
        //When flexUpFlow clicked call virtual function
        //Call incrementFlow
        incrementFlow();
    }
    else if (&src == &flexDownFlow)
    {
        //Interaction3
        //When flexDownFlow clicked call virtual function
        //Call decrementFlow
        decrementFlow();
    }
    else if (&src == &flexButton1)
    {
        //Interaction5
        //When flexButton1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}
